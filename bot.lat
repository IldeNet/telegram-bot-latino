incluir ('ajustes')
incluir ('urls')

URL = 'https://api.telegram.org/bot' . api_key . '/'

funcion actualizaciones()
	res = consultar(URL . "getUpdates")
	#escribir(res)	#para test
	offset = json(res, ".result[0] .update_id")
	si ( offset != "" )
		#ya no necesitas convertir a decimal lo hace ene automatico latino ;)
    si offset > 0
      offset = offset + 1
			consultar(URL . "getUpdates?offset=" . offset)	#borro el ultimo mensaje
    fin
  fin
	#regreso la consulta inicial
  retorno res
fin

funcion enviarMensaje(chatId, texto)
  retorno consultar(URL . "sendMessage?chat_id=" . chatId . "&text=" . codificar(texto))
fin

funcion enviarMensaje_markdown(chatId, texto)
  retorno consultar(URL . "sendMessage?chat_id=" . chatId . "&text=" . codificar(texto) . "&parse_mode=markdown")
fin

funcion enviarMensaje_html(chatId, texto)
  retorno consultar(URL . "sendMessage?chat_id=" . chatId . "&text=" . codificar(texto) . "&parse_mode=html")
fin

funcion enviarAccion(chatId, accion)
  accion = reemplazar(accion, "escribiendo", "typing")
  accion = reemplazar(accion, "subiendo_foto", "upload_photo")
  accion = reemplazar(accion, "subiendo_video", "upload_video")
  accion = reemplazar(accion, "subiendo_audio", "upload_audio")
  accion = reemplazar(accion, "subiendo_documento", "upload_document")
  accion = reemplazar(accion, "grabando_video", "record_video")
  accion = reemplazar(accion, "grabando_audio", "record_audio")
  accion = reemplazar(accion, "buscar_localizacion", "find_location")
  retorno consultar(URL . "sendChatAction?chat_id=" . chatId . "&action=" . accion)
fin


funcion reenviarMensaje(chatId, userId, msgId)
  retorno consultar(URL . "forwardMessage?chat_id=" . chatId . "&from_chat_id=" . userId . "&message_id=" . msgId)
fin

funcion abandonarChat(chatId)
  retorno consultar(URL . "leaveChat?chat_id=" . chatId)
fin

funcion expulsarUsuario(chatId, userId)
	consultar(URL . "kickChatMember?chat_id=" . chatId . "&user_id=" . userId)
	consultar(URL . "unbanChatMember?chat_id=" . chatId . "&user_id=" . userId)
fin

funcion banearUsuario(chatId, userId)
  retorno consultar(URL . "kickChatMember?chat_id=" . chatId . "&user_id=" . userId)
fin

funcion desbanearUsuario(chatId, userId)
  retorno consultar(URL . "unbanChatMember?chat_id=" . chatId . "&user_id=" . userId)
fin

enviarMensaje_markdown(administrador, "*Bot iniciado*")

mientras verdadero
	res = actualizaciones()
	texto = json(res, '.result[0] .message .text')

	usuario = {
			"id": json(res, ".result[0] .message .from .id"),
			"nombre": json(res, ".result[0] .message .from .first_name"),
			"apellido": json(res, ".result[0] .message .from .last_name"),
			"usuario": json(res, ".result[0] .message .from .username")
			}

	chat = {
			"id": json(res, ".result[0] .message .chat .id"),
			"titulo": json(res, ".result[0] .message .chat .title"),
			"usuario": json(res, ".result[0] .message .chat .username")
			}

	nuevo_usuario = {
			"id": json(res, ".result[0] .message .new_chat_member .id"),
			"nombre": json(res, ".result[0] .message .new_chat_member .first_name"),
			"apellido": json(res, ".result[0] .message .new_chat_member .last_name"),
			"usuario": json(res, ".result[0] .message .new_chat_member .username")
			}

  si ( texto == "/start" )
  	enviarMensaje(chat->id, "¡Hey! ".usuario->nombre."\n\nEstás probando el nuevo bot escrito completamente en la programación Latino :D. Por el momento faltan cosas. Pero de poco a poco irá mejorando 😄👍")
  fin
	
  si ( texto == "/id" )
  	enviarMensaje(chat->id, "Id ".usuario->id."\nChat ".chat->id)
  fin

  si ( nuevo_usuario->id )
  	enviarMensaje(chat->id, "Hola ".nuevo_usuario->nombre.", bienvenido a ".chat->titulo)
  fin

  si ( texto != "")
  	escribir(texto." desde ".usuario->nombre)
  fin

fin
